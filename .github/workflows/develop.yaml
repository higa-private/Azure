name: develop workflow test

on:
  push:
    branches: ["develop"]

env:
  tf_version: "1.5.4"
  node_version: "20.x"
  key_vault: "terraform20250909"
  resource_group_name: "rg-develop"
  backend_storage_account: "develop01"
  backend_container_name: "tfstate20250911"
  backend_key: "terraform.tfstate"

jobs:
  Terraform_Exec:
    runs-on: [self-hosted, Linux]
    container:
      image: docker.io/library/node:iron-trixie-slim
    strategy:
      fail-fast: true
      max-parallel: 1
      matrix:
        tf_working_dir:
          - develop
    steps:
      - uses: actions/checkout@v2

      - name: Setup OS
        shell: bash
        run: |
          apt-get update && apt-get install -y ca-certificates
          sed -i -e 's/http/https/' /etc/apt/sources.list.d/debian.sources
          apt-get update && apt-get install -y less vim curl unzip sudo jq git
          curl -sL https://aka.ms/InstallAzureCLIDeb | bash

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.tf_version }}

      - name: Get Terraform Directory
        id: get_dir
        shell: bash
        run: |
          cd ${{ matrix.tf_working_dir }}
          echo "tf_region_dir=$(pwd)" >> $GITHUB_OUTPUT

      - name: Terraform fmt
        run: terraform fmt -recursive

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Terraform Init
        shell: bash
        run: |
          cd ${{ matrix.tf_working_dir }}
          terraform init -upgrade \
            -backend-config="resource_group_name=${{ env.resource_group_name }}" \
            -backend-config="storage_account_name=${{ env.backend_storage_account }}" \
            -backend-config="container_name=${{ env.backend_container_name }}" \
            -backend-config="key=${{ env.backend_key }}"

      - name: Terraform Plan
        shell: bash
        run: |
          cd ${{ matrix.tf_working_dir }}
          terraform plan --parallelism=50 -no-color
