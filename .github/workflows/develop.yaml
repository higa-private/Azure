name: develop workflow test

on:
  push:
    branches: ["develop"]

env:
  tf_version: "1.5.4"
  node_version: "20.x"
  key_vault: "terraform20250909"
  provider_secrets: "subscription-id tenant-id sp-client-id sp-client-secret"
  nsg_secrets: "nsg-inbound-ip nsg-outbound-ip"

jobs:
  Terraform_Exec:
    runs-on: [self-hosted, Linux]
    container:
      image: docker.io/library/node:iron-trixie-slim
    strategy:
      fail-fast: true
      max-parallel: 1
      matrix:
        tf_working_dir:
          - develop
    steps:
      - name: Setup OS
        shell: bash
        run: |
          apt-get update && apt-get install -y ca-certificates   # イメージ初期構築時にインストールするので、実際に不要

          sed -i -e 's/http/https/' /etc/apt/sources.list.d/debian.sources
          apt-get update && apt-get install -y less vim curl unzip sudo jq git
          curl -sL https://aka.ms/InstallAzureCLIDeb | bash

      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.tf_version }}

      - name: Terraform fmt
        run: terraform fmt -recursive

      - name: Get Terraform Directory
        id: get_dir
        shell: bash
        run: |
          cd ${{ matrix.tf_working_dir }}
          echo "tf_region_dir=$(pwd)" >> $GITHUB_OUTPUT

      - name: Terraform Init
        shell: bash
        run: |
          cd ${{ matrix.tf_working_dir }}/
          terraform init -upgrade

      - name: Azure Login
        shell: bash
        run: |
          az login --identity 1> /dev/null

      - name: Create Terraform tfvars from Key Vault
        shell: bash
        run: |
          TFVARS_FILE=${{ matrix.tf_working_dir }}/credentials.auto.tfvars
          # provider_credentials ブロック開始
          echo "provider_credentials = {" >> $TFVARS_FILE

          for secret in ${{ env.provider_secrets }}; do
            provider_value=$(az keyvault secret show \
              --vault-name ${{ env.key_vault }} \
              --name "$secret" \
              --query value -o tsv)
            provider_varname=$(echo "$secret" | tr '[:lower:]-' '[:lower:]_')
            
            echo "${provider_varname} = \"${provider_value}\"" >> $TFVARS_FILE
          done

      - name: Terraform Plan
        shell: bash
        run: |
          cd ${{ matrix.tf_working_dir }}/
          terraform plan --parallelism=50 -no-color
