name: develop workflow test

on:
  push:
    branches: ["develop"]

env:
  tf_version: "1.5.4"
  node_version: "20.x"

jobs:
  Terraform_Exec:
    runs-on: [self-hosted, Linux]
    container:
      image: docker.io/library/node:iron-trixie-slim
    outputs:
      output1: ${{ steps.get_dir.outputs.tf_region_dir }}
    strategy:
      fail-fast: true
      max-parallel: 1
      matrix:
        tf_working_dir:
          - develop
    steps:
      - name: Setup OS
        run: |
          apt-get update && apt-get install -y ca-certificates   # イメージ初期構築時にインストールするので、実際に不要

          sed -i -e 's/http/https/' /etc/apt/sources.list.d/debian.sources
          apt-get update && apt-get install -y less vim curl unzip sudo jq git

      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.tf_version }}

      - name: Terraform fmt
        run: terraform fmt -recursive

      - name: Get Terraform Directory
        id: get_dir
        shell: bash
        run: |
          cd ${{ matrix.tf_working_dir }}
          echo "::set-output name=tf_region_dir::$(pwd)"

      - name: Terraform Init
        run: |
          cd ${{ matrix.tf_working_dir }}/
          terraform init -upgrade

      - name: Azure Login
        run: |
          az login --identity

- name: Get Key Vault Secret
  id: kv
  run: |
    echo "SUBSCRIPTION_ID=$(az keyvault secret show \
      --vault-name terraform20250909 \
      --name test \
      --query value -o tsv)" >> $GITHUB_ENV

- name: Check Key Vault Secret
  run: echo "SUBSCRIPTION_ID=${SUBSCRIPTION_ID}"

      - name: Terraform Plan
        run: |
          cd ${{ matrix.tf_working_dir }}/
          terraform plan --parallelism=50 -no-color
